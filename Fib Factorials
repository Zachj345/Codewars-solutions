'''
Task:

Write a function that accepts an integer n and returns the sum of the factorials of the first n Fibonacci numbers

Examples:

sum_fib(2)  = 2    # 0! + 1! = 2
sum_fib(3)  = 3    # 0! + 1! + 1! = 3
sum_fib(4)  = 5    # 0! + 1! + 1! + 2! = 5
sum_fib(10) = 295232799039604140898709551821456501251
Constraints:

2 ≤ N ≤ 22

sum_fib(20)

This number is so huge I need to make a separate area for it. Imagine 13327 digits!
'''

import math
def fib(n):
    if n == 2:
        return 2
    res = [0,1,1]
    for i in range(3,n+1):
        res.append(sum(res[-2:]))
    return res[:n]

def sum_fib(n):
    if n == 2:
        return 2
    res = fib(n)
    return sum(math.factorial(i) for i in res)
